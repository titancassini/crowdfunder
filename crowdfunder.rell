// Below we set up the entities for the crowdfunder app
// A dApp user is identified by their public key
entity user {
	key pubkey;
	key username: text;
}


// A project is identified by its name and the user who created it. 
entity project {
	key name;
	admin: user;
}


// The user can choose a category for the project.
entity project_category {
		key category: text;
}


// The user can write a project description (will need character limit).
entity project_description {
	mutable description: text;
}


// The user can set a fundraising goal.
entity funding_goal {
	key fundinggoal: integer;
}


// The user can also set a start date.
entity start_date {
	key startdate: timestamp;
}


//  ...an end date. 
entity end_date {
	key enddate: timestamp;
}


// The dApp displays the amount raised.
entity amount_raised {
	key amraised: integer;
}

// The dApp dipslayed the number of pledges.
entity number_of_pledges {
	key num_pledges: integer; 
}

// This entity stores the pledges that users make, the amount of each pledge, and to which project the pledges are assigned to.
entity pledges {
	donor: user;
	key project: integer;
	key user: integer;
	key amount: integer;
}


// Here we initialize the module
operation init (founder_pubkey: pubkey) {
	require( (user@*{} limit 1) .size() == 0 );
	val founder = create user (founder_pubkey, "admin");
}


// Register a new user

operation register_user (
	existing_user_pubkey: pubkey,
	new_user_pubkey: pubkey,
	new_user_username: text
) {
	require( is_signer(existing_user_pubkey ) );
	val existing_user = user@{existing_user_pubkey};
	
	val new_user = create user (new_user_pubkey, new_user_username);
}


// Registered users can create new crowdfunder projects.
operation create_project ( admin_pubkey: pubkey, project_name: name, category: project_category, description: project_description, fundinggoal: funding_goal, startdate: start_date, enddate: end_date, amraised: amount_raised, numpledge: number_of_pledges) {
	require( is_signer(admin_pubkey) );
	val admin_usr = user@{admin_pubkey};
	create project (user@{admin_pubkey}, project_name); 
}


//operations: create project, query amountraised, print if goal raised = congradualtions!, query numofcontributions


// Assign project category

// create/update description

// create fundraising goal

// set startdate  

// set enddate

// query number of contributors

// query contributors

// query amount project raised

// print if goal achieved = congradualtions!

// query all projects across crowdfunder dApp

// query all donations across crowdfunder dApp



